# This is a basic workflow to help you get started with Actions

name: Deploy

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  #push:
  #  branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Get RemoteEngine version
        run: |
          #sudo apt-get update
          #sudo apt-get install curl gpg -y
          #APT_PATH=https://packages.iot.fa.denso-wave.com/fa/iot/apt/
          #curl -fsSL ${APT_PATH}public.key | sudo gpg --dearmor -o /etc/apt/keyrings/dnwa.gpg
          #echo "deb [signed-by=/etc/apt/keyrings/dnwa.gpg] $APT_PATH stable main" | sudo tee /etc/apt/sources.list.d/dnwa.list
          #sudo apt-get update
          #VERSION=$(for word in $(apt-cache policy orin3.remoteengine | grep Candidate); do echo $word; done | head -n 2 | tail -n 1)
          VERSION=1.0.426
          echo "REMOTEENGINE_VERSION=$VERSION" >> $GITHUB_ENV

      - name: Show tag name
        run: echo densowave/orin3:${{ env.REMOTEENGINE_VERSION }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASS }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: "{{defaultContext}}:V1/ubuntu24.04"
          platforms: linux/amd64,linux/arm64
          push: true
          tags: densowave/orin3:${{ env.REMOTEENGINE_VERSION }}
